{"ast":null,"code":"import _toConsumableArray from\"/Users/kooshaowji/Documents/GitHub/DreamTeam/dreamcrm/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var contactReducer=function contactReducer(){var contacts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{contactData:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'CREATE':return[].concat(_toConsumableArray(contacts),[action.payload]);case'GET_ALL':return action.payload;case'DELETE':return contacts.filter(function(contact){return contact._id!==action.payload;});case'UPDATE':return contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;});case'GET':return action.payload;default:return contacts;}};export default contactReducer;","map":{"version":3,"sources":["/Users/kooshaowji/Documents/GitHub/DreamTeam/dreamcrm/src/reducers/contact.js"],"names":["contactReducer","contacts","contactData","action","type","payload","filter","contact","_id","map"],"mappings":"gJAAA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAA4C,IAA3CC,CAAAA,QAA2C,2DAAhC,CAAEC,WAAW,CAAE,EAAf,CAAgC,IAAXC,CAAAA,MAAW,2CAGjE,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,QAAL,CACE,mCAAYH,QAAZ,GAAsBE,MAAM,CAACE,OAA7B,GACF,IAAK,SAAL,CACE,MAAOF,CAAAA,MAAM,CAACE,OAAd,CACF,IAAK,QAAL,CACE,MAAOJ,CAAAA,QAAQ,CAACK,MAAT,CAAgB,SAACC,OAAD,QAAWA,CAAAA,OAAO,CAACC,GAAR,GAAgBL,MAAM,CAACE,OAAlC,EAAhB,CAAP,CACF,IAAK,QAAL,CACI,MAAOJ,CAAAA,QAAQ,CAACQ,GAAT,CAAa,SAACF,OAAD,QAAYA,CAAAA,OAAO,CAACC,GAAR,GAAgBL,MAAM,CAACE,OAAP,CAAeG,GAA/B,CAAqCL,MAAM,CAACE,OAA5C,CAAqDE,OAAjE,EAAb,CAAP,CACJ,IAAK,KAAL,CACI,MAAOJ,CAAAA,MAAM,CAACE,OAAd,CACJ,QACE,MAAOJ,CAAAA,QAAP,CAZN,CAcC,CAjBH,CAmBE,cAAeD,CAAAA,cAAf","sourcesContent":["const contactReducer = (contacts = { contactData: [] }, action) => {\n    \n  \n  switch (action.type) {\n      case 'CREATE':  \n        return [ ...contacts, action.payload ];\n      case 'GET_ALL':\n        return action.payload;\n      case 'DELETE':\n        return contacts.filter((contact)=>contact._id !== action.payload);\n      case 'UPDATE':\n          return contacts.map((contact)=>(contact._id === action.payload._id ? action.payload :contact));\n      case 'GET':\n          return action.payload;\n      default:\n        return contacts;\n    }\n  };\n  \n  export default contactReducer;"]},"metadata":{},"sourceType":"module"}